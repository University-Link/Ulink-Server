openapi: 3.0.0

servers:
  - description: Local test server
    url: http://127.0.0.1:3000
  - description: Local test server
    url: http://52.78.27.117:3000

info:
  version: '1.0.0'
  title: 'U-link'
  description: 'University-link'
  contact:
    email: deadlock@kakao.com
tags:
  - name: User
    description: Access User data
  - name: Schedule
    description: Access Schedule data
  - name : Chatting
    description: Access Chatting data
  - name : Notice
    description: Access Notice data
  - name : Social
    description: Access Social data
  - name : Cart
    description: Access Cart data
  - name : Subject
    description: Access Subject data



paths:
  /user/signup:
    post:
      tags:
        - User
      summary: 유저 회원가입
      operationId: userSignUp
      description: 유저 회원가입
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSignUp'
        description: User data to sign up
      responses:
        '201':
          description: User Sign up
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    example: 200
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 회원 가입 성공
                  data:
                    $ref: '#/components/schemas/UserIdIdx'
        '400':
          description: 'invalid input, object invalid'
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Fail'

  /user/signin:
    post:
      tags:
        - User
      summary: 유저 로그인
      operationId: userSignIn
      description: 유저 로그인
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSignIn'
        description: User data to sign in
      responses:
        '200':
          description: User login
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    example: 200
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 로그인 성공
                  data:
                    $ref: '#/components/schemas/Token'
        '400':
          description: 'invalid input, object invalid'
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Fail'

  /user/profile:
    post:
      tags:
        - User
      summary: 프로필 사진 업데이트
      operationId: updateProfile
      description: 특정 유저 프로필 업데이트
      consumes:
        - multipart/form-data
      parameters:
        - in: formData
          name: profileImage
          required: true
          schema:
            type: file
          description: 프로필 이미지 사진
        - in: header
          name: token
          required: true
          schema:
            type: string
          description: JWT 토큰
      responses:
        '200':
          description: 프로필 사진 업데이트 완료
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 프로필 이미지 업데이트 성공
                  data:
                    type: object
                    example: {
                        "id": "qhqo",
                        "name": "김보배",
                        "email": "tree9295@gachon.ac.kr",
                        "school": "가천대학교",
                        "profileImage": "https://bbs3.s3.ap-northeast-2.amazonaws.com/1593689580981.png"
                    }
        '400':
          description: 'invalid input, object invalid'
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Fail'

    get:
      tags:
        - User
      summary: 모든 프로필 조회
      operationId: userProfile
      description: 모든 유저 프로필 조회 (debugging)
      responses:
        '200':
          description: Get all profile
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 프로필 조회 성공
                  data:
                    type: object
                    example: {
                      "userList": [
                          {
                              "userIdx": 1,
                              "id": "qhqo",
                              "name": "김보배",
                              "email": "tree9295@gachon.ac.kr",
                              "nickname": "instant_bronze_harrier",
                              "school": "가천대학교",
                              "check": 0,
                              "profileImage": "https://~.amazonaws.com/294021890.jpg",
                              "like": 10,
                              "point": 124,
                              "level": "신입생",
                              "major": null
                          },
                          {
                              "userIdx": 2,
                              "id": "tjddms",
                              "name": "황지혜",
                              "email": "ghkdghkgd@email.ac.kr",
                              "nickname": "beautiful_rqjelk_quelea",
                              "school": "성신여자대학교",
                              "check": 0,
                              "profileImage": "https://~.amazonaws.com/294021890.jpg",
                              "like": 52,
                              "point": 521,
                              "level": "신입생",
                              "major": null
                          },
                          ...
                      ]
                  }
        '400':
          description: 'invalid input, object invalid'
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Fail'

  /user/profile/{id}:
    get:
      tags:
        - User
      summary: 특정 ID 유저 프로필 조회
      operationId: userSpecificProfile
      description: 특정 유저 프로필 조회
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: 유저 ID
      responses:
        '200':
          description: 아아디를 통해 특정 프로필 조회
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 프로필 조회 성공
                  data:
                    type: object
                    example: {
                        "userId": "qhqo",
                        "name": "김보배",
                        "email": "tree9295@gachon.ac.kr",
                        "nickname": "instant_bronze_harrier",
                        "school": "가천대학교",
                        "check": 0,
                        "profileImage": "https://~.amazonaws.com/294021890.jpg",
                        "like": 0,
                        "point": 0,
                        "level": "신입생"
                    }
        '400':
          description: 'invalid input, object invalid'
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Fail'

  /schedule:
    get:
      tags:
        - Schedule
      summary: 시간표 - 메인 시간표 조회
      operationId: getMainTimeTable
      description: 시간표 - 메인 시간표 조회
      parameters:
        - in: header
          name: token
          required: true
          schema:
            type: string
          description: JWT 토큰
      responses:
        '200':
          description: 시간표 - 메인 시간표 조회
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 시간표 조회 성공
                  data:
                    type: object
                    example: {
                      "timeTable": {
                          "scheduleIdx": 1,
                          "semester": "2020-1",
                          "name": "첫 시간표"
                      },
                      "subjects": [
                          {
                              "idx": 3,
                              "name": "봉사",
                              "startTime": "17:00",
                              "endTime": "18:30",
                              "day": "wen",
                              "content": "서울 양로원",
                              "color": 12,
                              "subject": false
                          },
                          {
                              "idx": 4,
                              "name": "알바",
                              "startTime": "19:30",
                              "endTime": "20:00",
                              "day": "thu",
                              "content": "커피빈",
                              "color": 13,
                              "subject": false
                          },
                          ...
                      ]
                  }
        '400':
          description: 'invalid input, object invalid'
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Fail'

  /schedule/{idx}:
    get:
      tags:
        - Schedule
      summary: 시간표 - 일정 상세정보(통합) 조회
      operationId: getSpecificSchedule
      description: 시간표 - 일정 상세정보(통합) 조회
      parameters:
        - in: header
          name: token
          required: true
          schema:
            type: string
          description: JWT 토큰
        - in: path
          name: idx
          required: true
          schema:
            type: string
          description: 시간표 idx
        - in: query
          name: isSubject
          required: true
          schema:
            type: boolean
          description: 학교일정(true)/개인일정(false)
      responses:
        '200':
          description: 시간표 - 일정 상세정보 조회
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 시간표 조회 성공
                  data:
                    type: object
                    example: {
                        "color": 6,
                        "subjectIdx": 3,
                        "subjectCode": "1001003",
                        "name": "컴퓨터 네트워크",
                        "nameAtomic": "ㅋㅓㅁㅍㅠㅌㅓㄴㅔㅌㅡㅇㅜㅓㅋㅡ",
                        "professor": "이아무개",
                        "school": "서울대학교",
                        "college": "공과대학",
                        "major": "소프트웨어학과",
                        "semester": "2020-1",
                        "grade": 2,
                        "credit": 3,
                        "people": 20,
                        "course": "전공선택",
                        "startTime": "11:00",
                        "endTime": "13:00",
                        "day": "tue",
                        "place": "창조관709"
                    }
        '400':
          description: 'invalid input, object invalid'
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Fail'

    put:
      tags:
        - Schedule
      summary: 시간표 - 메인 시간표 이름 수정(변경)
      operationId: updateMainTimeTableName
      description: 시간표 - 메인 시간표 이름 수정(변경)
      parameters:
        - in: header
          name: token
          required: true
          schema:
            type: string
          description: JWT 토큰
        - in: path
          name: idx
          required: true
          schema:
            type: string
          description: 시간표 idx
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMainTimeTableName'
        description: Update Main Timetable Name data
      responses:
        '200':
          description: 시간표 - 메인 시간표 이름 수정(변경)
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 일정 수정 성공
                  data:
                    type: object
                    example: {
                      "idx": "1",
                      "name": "이번에는 1등하자!"
                    }
        '400':
          description: 'invalid input, object invalid'
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Fail'

    delete: 
      tags:
        - Schedule
      summary: 시간표 - 일정 삭제 (통합)
      operationId: deleteSpecificSchedule
      description: 시간표 - 일정 삭제 (통합)
      parameters:
        - in: header
          name: token
          required: true
          schema:
            type: string
          description: JWT 토큰
        - in: path
          name: idx
          required: true
          schema:
            type: string
          description: 시간표 idx
        - in: query
          name: isSubject
          required: true
          schema:
            type: boolean
          description: 학교일정(true)/개인일정(false)
      responses:
        '200':
          description: 시간표 - 일정 삭제 (통합)
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 일정 삭제 성공
                  data:
                    type: object
                    example: {
                        "idx": "15"
                    }
        '400':
          description: 'invalid input, object invalid'
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Fail'

  /schedule/main/{idx}:
    put:
      tags:
        - Schedule
      summary: 시간표 - 메인 시간표 수정(변경)
      operationId: updateMainTimeTable
      description: 시간표 - 메인 시간표 수정(변경)
      parameters:
        - in: header
          name: token
          required: true
          schema:
            type: string
          description: JWT 토큰
        - in: path
          name: idx
          required: true
          schema:
            type: string
          description: 시간표 idx
      responses:
        '200':
          description: 시간표 - 메인 시간표 수정(변경)
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 일정 수정 성공
                  data:
                    type: object
                    example: {
                        "idx": "7"
                    }
        '400':
          description: 'invalid input, object invalid'
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Fail'

    delete: 
      tags:
        - Schedule
      summary: 메인 시간표 삭제하기
      operationId: deleteMainTimeTable
      description: 메인 시간표 삭제하기
      parameters:
        - in: header
          name: token
          required: true
          schema:
            type: string
          description: JWT 토큰
        - in: path
          name: idx
          required: true
          schema:
            type: string
          description: 시간표 idx
      responses:
        '200':
          description: 메인 시간표 삭제하기
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 일정 삭제 성공
                  data:
                    type: object
                    example: {
                        "idx": "3"
                    }
        '400':
          description: 'invalid input, object invalid'
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Fail'

  /schedule/list:
    get:
      tags:
        - Schedule
      summary: 모든 학기 시간표 목록 가져오기
      operationId: allTimeTableList
      description: 모든 학기 시간표 목록 가져오기
      parameters:
        - in: header
          name: token
          required: true
          schema:
            type: string
          description: JWT 토큰
      responses:
        '200':
          description: 모든 학기 시간표 목록 가져오기
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 시간표 조회 성공
                  data:
                    type: object
                    example: [
                        {
                            "semester": "2020-1",
                            "timeTableList": [
                                {
                                    "scheduleIdx": 2,
                                    "name": "보배스 시간표",
                                    "isMain": 1
                                },
                                {
                                    "scheduleIdx": 3,
                                    "name": "이번학점은 4.5",
                                    "isMain": 0
                                },
                                {
                                    "scheduleIdx": 5,
                                    "name": "1학기 예정",
                                    "isMain": 0
                                }
                            ]
                        },
                        {
                            "semester": "2020-2",
                            "timeTableList": [
                                {
                                    "scheduleIdx": 6,
                                    "name": "2학기 시간표",
                                    "isMain": 0
                                },
                                {
                                    "scheduleIdx": 7,
                                    "name": "2학기 예정",
                                    "isMain": 1
                                }
                            ]
                        }
                    ]
        '400':
          description: 'invalid input, object invalid'
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Fail'

  /schedule/personal:
    post:
      tags:
        - Schedule
      summary: 시간표 - 개인일정 만들기
      operationId: createPersonalTimeTable
      description: 시간표 - 개인일정 만들기
      parameters:
        - in: header
          name: token
          required: true
          schema:
            type: string
          description: JWT 토큰
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePersonalTimeTable'
        description: Create Personal Timetable data
      responses:
        '200':
          description: 시간표 - 개인일정만들기
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 일정 생성 성공
                  data:
                    type: object
                    example: {
                      "idx": 16
                    }
        '400':
          description: 'invalid input, object invalid'
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Fail'

  /schedule/school:
    post:
      tags:
        - Schedule
      summary: 시간표 - 학교수업일정 만들기
      operationId: createSchoolTimeTable
      description: 시간표 - 학교수업일정 만들기
      parameters:
        - in: header
          name: token
          required: true
          schema:
            type: string
          description: JWT 토큰
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSchoolTimeTable'
        description: Create School Timetable data
      responses:
        '200':
          description: 시간표 - 학교일정만들기
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 일정 생성 성공
                  data:
                    type: object
                    example: {
                      "idx": 16
                    }
        '400':
          description: 'invalid input, object invalid'
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Fail'

  /schedule/personal/{idx}:
    get:
      tags:
        - Schedule
      summary: 특정 시간표 - 개인일정 상세정보 조회
      operationId: getSpecificPersonalTimeTable
      description: 특정 시간표 - 개인일정 상세정보 조회
      parameters:
        - in: header
          name: token
          required: true
          schema:
            type: string
          description: JWT 토큰
        - in: path
          name: idx
          required: true
          schema:
            type: string
          description: 개인일정 idx
      responses:
        '200':
          description: 특정 시간표- 개인일정 상세정보 조회
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 시간표 조회 성공
                  data:
                    type: object
                    example: {
                        "schedulePersonalIdx": 3,
                        "name": "봉사",
                        "startTime": "17:00",
                        "endTime": "18:30",
                        "day": "wen",
                        "content": "서울 양로원",
                        "color": 12,
                        "scheduleIdx": 1
                    }
        '400':
          description: 'invalid input, object invalid'
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Fail'
  
    put:
      tags:
        - Schedule
      summary: 특정 시간표 - 개인일정 수정
      operationId: updateSchedulePersonal
      description: 특정 시간표 - 개인일정 수정
      parameters:
        - in: header
          name: token
          required: true
          schema:
            type: string
          description: JWT 토큰
        - in: path
          name: idx
          required: true
          schema:
            type: string
          description: 시간표 idx
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSchedulePersonal'
        description: Update Schedule Personal data
      responses:
        '200':
          description: 특정 시간표 - 개인일정 수정
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 일정 수정 성공
                  data:
                    type: object
                    example: {
                        "idx": "7"
                    }
        '400':
          description: 'invalid input, object invalid'
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Fail'
    
    delete: 
      tags:
        - Schedule
      summary: 특정 시간표 - 개인일정 삭제
      operationId: deleteSpecificPersonalTimeTable
      description: 특정 시간표 - 개인일정 삭제
      parameters:
        - in: header
          name: token
          required: true
          schema:
            type: string
          description: JWT 토큰
        - in: path
          name: idx
          required: true
          schema:
            type: string
          description: 개인일정 idx
      responses:
        '200':
          description: 특정 시간표- 개인일정 삭제
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 일정 삭제 성공
                  data:
                    type: object
                    example: {
                        "idx": "3"
                    }
        '400':
          description: 'invalid input, object invalid'
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Fail'

  /schedule/school/{idx}:
    get:
      tags:
        - Schedule
      summary: 특정 시간표 - 학교수업일정 상세정보 조회
      operationId: getSpecificSchoolTimeTable
      description: 특정 시간표 - 학교수업일정 상세정보 조회
      parameters:
        - in: header
          name: token
          required: true
          schema:
            type: string
          description: JWT 토큰
        - in: path
          name: idx
          required: true
          schema:
            type: string
          description: 학교수업일정 idx
      responses:
        '200':
          description: 특정 시간표 - 학교수업일정 상세정보 조회
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 시간표 조회 성공
                  data:
                    type: object
                    example: {
                        "subjectIdx": 1,
                        "subjectCode": "1001001",
                        "name": "전자기학",
                        "professor": "최아무개",
                        "school": "서울대학교",
                        "college": "공과대학",
                        "major": "전자공학과",
                        "semester": "2020-1",
                        "grade": "2",
                        "credit": 3,
                        "people": 30,
                        "course": "전공필수",
                        "color": 5
                    }
        '400':
          description: 'invalid input, object invalid'
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Fail'

    delete: 
      tags:
        - Schedule
      summary: 특정 시간표 - 학교수업일정 삭제
      operationId: deleteSpecificSchoolTimeTable
      description: 특정 시간표 - 학교수업일정 삭제
      parameters:
        - in: header
          name: token
          required: true
          schema:
            type: string
          description: JWT 토큰
        - in: path
          name: idx
          required: true
          schema:
            type: string
          description: 학교수업일정 idx
      responses:
        '200':
          description: 특정 시간표- 학교수업일정 삭제
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 일정 삭제 성공
                  data:
                    type: object
                    example: {
                        "idx": "15"
                    }
        '400':
          description: 'invalid input, object invalid'
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Fail'


  /chat:
    get:
      tags:
        - Chatting
      summary: 채팅방 리스트 조회
      operationId: chattingList
      description: 채팅방 리스트 조회
      parameters:
        - in: header
          name: token
          required: true
          schema:
            type: string
          description: JWT 토큰
      responses:
        '200':
          description: 채팅방 리스트 조회
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 채팅 목록 조회 성공
                  data:
                    type: object
                    example: {
                        "semester": "2020-1",
                        "chat": [
                            {
                                "scheduleSchoolIdx": 1,
                                "name": "전자기학",
                                "color": 1,
                                "total": 30,
                                "current": 2
                            },
                            {
                                "scheduleSchoolIdx": 2,
                                "name": "자료구조",
                                "color": 2,
                                "total": 40,
                                "current": 2
                            },
                            ...
                        ]
                    }
        '400':
          description: 'invalid input, object invalid'
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Fail'


  /notice:
    get:
      tags:
        - Notice
      summary: 메인 스케줄의 모든 공지 가져오기 (Calendar view)
      operationId: getNoticeList
      description: 메인 스케줄의 모든 공지 가져오기 (Calendar view)
      parameters:
        - in: header
          name: token
          required: true
          schema:
            type: string
          description: JWT 토큰
        - in: query
          name: start
          required: true
          schema:
            type: string
            format: date
          description: 시작날짜(start=2020-07-01)
        - in: query
          name: end
          required: true
          schema:
            type: string
            format: date
          description: 끝날짜(end=2020-07-31)
      responses:
        '200':
          description: 메인 스케줄의 모든 공지 가져오기 (Calendar view)
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 공지 목록 조회 성공
                  data:
                    type: object
                    example: [
                        {
                            "date": "2020-07-09T15:00:00.000Z",
                            "notice": [
                                {
                                    "name": "전자기학",
                                    "color": 5,
                                    "noticeIdx": 1,
                                    "category": "과제",
                                    "startTime": "-1",
                                    "endTime": "12:00",
                                    "title": "논문 작성"
                                }
                            ]
                        },
                        {
                            "date": "2020-07-09T15:00:00.000Z",
                            "notice": [
                                {
                                    "name": "경영학개론",
                                    "color": 1,
                                    "noticeIdx": 7,
                                    "category": "시험",
                                    "startTime": "18:00",
                                    "endTime": "19:00",
                                    "title": "2차 쪽지시험"
                                }
                            ]
                        },
                        ...
                    ]
        '400':
          description: 'invalid input, object invalid'
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Fail'
    
  /notice/subject/{idx}:
    get:
      tags:
        - Notice
      summary: 특정 과목의 공지 가져오기
      operationId: getNotice
      description: 특정 과목의 공지 가져오기
      parameters:
        - in: header
          name: token
          required: true
          schema:
            type: string
          description: JWT 토큰
        - in: path
          name: idx
          required: true
          schema:
            type: string
          description: 과목 idx
      responses:
        '200':
          description: 특정 과목의 공지 가져오기
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 공지 목록 조회 성공
                  data:
                    type: object
                    example: {
                        "과제": [
                            {
                                "noticeIdx": 1,
                                "title": "논문 작성",
                                "startTime": "-1",
                                "endTime": "12:00",
                                "date": "2020-07-09T15:00:00.000Z"
                            },
                            {
                                "noticeIdx": 2,
                                "title": "레포트 제출",
                                "startTime": "-1",
                                "endTime": "15:00",
                                "date": "2020-07-13T15:00:00.000Z"
                            }
                        ],
                        "시험": [
                            {
                                "noticeIdx": 8,
                                "title": "중간 퀴즈",
                                "startTime": "09:00",
                                "endTime": "10:30",
                                "date": "2020-07-16T15:00:00.000Z"
                            }
                        ],
                        "수업": [
                            {
                                "noticeIdx": 5,
                                "title": "수업 휴강",
                                "startTime": "-1",
                                "endTime": "-1",
                                "date": "2020-08-01T15:00:00.000Z"
                            },
                            {
                                "noticeIdx": 9,
                                "title": "폐강",
                                "startTime": "-1",
                                "endTime": "-1",
                                "date": "2020-12-16T15:00:00.000Z"
                            },
                            {
                                "noticeIdx": 10,
                                "title": "폐강",
                                "startTime": "-1",
                                "endTime": "-1",
                                "date": "2020-12-16T15:00:00.000Z"
                            },
                            {
                                "noticeIdx": 11,
                                "title": "폐강",
                                "startTime": "-1",
                                "endTime": "-1",
                                "date": "2020-12-16T15:00:00.000Z"
                            }
                        ]
                    }
        '400':
          description: 'invalid input, object invalid'
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Fail'

    post:
      tags:
        - Notice
      summary: 공지 등록하기
      operationId: createNotice
      description: 공지 등록하기
      parameters:
        - in: header
          name: token
          required: true
          schema:
            type: string
          description: JWT 토큰
        - in: path
          name: idx
          required: true
          schema:
            type: string
          description: 과목 idx
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNotice'
        description: Create Notice data
      responses:
        '200':
          description: 공지 등록하기
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 일정 생성 성공
        '400':
          description: 'invalid input, object invalid'
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Fail'

  /notice/{idx}:
    get:
      tags:
        - Notice
      summary: 공지 상세조회
      operationId: getSpecificNotice
      description: 공지 상세조회
      parameters:
        - in: header
          name: token
          required: true
          schema:
            type: string
          description: JWT 토큰
        - in: path
          name: idx
          required: true
          schema:
            type: string
          description: 공지 idx
      responses:
        '200':
          description: 공지 상세조회
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 공지 조회 성공
                  data:
                    type: object
                    example: {
                        "noticeIdx": 1,
                        "category": "과제",
                        "date": "2020-07-09T15:00:00.000Z",
                        "startTime": "-1",
                        "endTime": "12:00",
                        "title": "논문 작성",
                        "content": "전지기학이 뭔지 모름 ;;ㅎㅎ"
                    }
        '400':
          description: 'invalid input, object invalid'
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Fail'
    
    put:
      tags:
        - Notice
      summary: 공지 수정(업데이트)
      operationId: updateSpecificNotice
      description: 공지 수정(업데이트)
      parameters:
        - in: header
          name: token
          required: true
          schema:
            type: string
          description: JWT 토큰
        - in: path
          name: idx
          required: true
          schema:
            type: string
          description: 공지 idx
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSpecificNotice'
        description: Update Specific Notice data
      responses:
        '200':
          description: 공지 수정(업데이트)
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 일정 수정 성공
                  data:
                    type: object
                    example: {
                        "idx": "7"
                    }
        '400':
          description: 'invalid input, object invalid'
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Fail'

  /cart:
    get:
      tags:
        - Cart
      summary: 장바구니(후보) 목록 조회
      operationId: getCartList
      description: 장바구니(후보) 목록 조회
      parameters:
        - in: header
          name: token
          required: true
          schema:
            type: string
          description: JWT 토큰
        - in: query
          name: semester
          required: true
          schema:
            type: string
          description: 해당학기(2020-1)
      responses:
        '200':
          description: 장바구니(후보) 목록 조회
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 장바구니 조회 성공
                  data:
                    type: object
                    example: [
                        {
                            "cartIdx": 1,
                            "userIdx": 1,
                            "subjectIdx": 1,
                            "semester": "2020-1",
                            "subjectCode": "1001001",
                            "name": "전자기학",
                            "nameAtomic": "ㅈㅓㄴㅈㅏㄱㅣㅎㅏㄱ",
                            "professor": "최아무개",
                            "school": "서울대학교",
                            "college": "공과대학",
                            "major": "전자공학과",
                            "grade": 2,
                            "credit": 3,
                            "people": 30,
                            "course": "전공필수"
                        },
                        {
                            "cartIdx": 3,
                            "userIdx": 1,
                            "subjectIdx": 3,
                            "semester": "2020-1",
                            "subjectCode": "1001003",
                            "name": "컴퓨터 네트워크",
                            "nameAtomic": "ㅋㅓㅁㅍㅠㅌㅓㄴㅔㅌㅡㅇㅜㅓㅋㅡ",
                            "professor": "이아무개",
                            "school": "서울대학교",
                            "college": "공과대학",
                            "major": "소프트웨어학과",
                            "grade": 2,
                            "credit": 3,
                            "people": 20,
                            "course": "전공선택"
                        },
                        {
                            "cartIdx": 5,
                            "userIdx": 1,
                            "subjectIdx": 5,
                            "semester": "2020-1",
                            "subjectCode": "1001005",
                            "name": "경제학개론",
                            "nameAtomic": "ㄱㅕㅇㅈㅔㅎㅏㄱㄱㅐㄹㅗㄴ",
                            "professor": "김아무개",
                            "school": "서울대학교",
                            "college": "공과대학",
                            "major": "경제학과",
                            "grade": 1,
                            "credit": 2,
                            "people": 20,
                            "course": "교양선택"
                        },
                        {
                            "cartIdx": 7,
                            "userIdx": 1,
                            "subjectIdx": 7,
                            "semester": "2020-1",
                            "subjectCode": "2149084",
                            "name": "저전력 공학",
                            "nameAtomic": "ㅈㅓㅈㅓㄴㄹㅕㄱㄱㅗㅇㅎㅏㄱ",
                            "professor": "박아무개",
                            "school": "서울대학교",
                            "college": "통신대학",
                            "major": "통신정보학과",
                            "grade": 4,
                            "credit": 2,
                            "people": 30,
                            "course": "전공선택"
                        }
                    ]
        '400':
          description: 'invalid input, object invalid'
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Fail'
  
  /cart/{idx}:
    post:
      tags:
        - Cart
      summary: 장바구니 과목 추가하기
      operationId: createCart
      description: 장바구니 과목 추가하기
      parameters:
        - in: header
          name: token
          required: true
          schema:
            type: string
          description: JWT 토큰
        - in: path
          name: idx
          required: true
          schema:
            type: string
          description: 과목 idx
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCart'
        description: Create Cart data
      responses:
        '200':
          description: 장바구니 과목 추가하기
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: integer
                    example: 200
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 장바구니 추가 성공
                  data:
                    type: object
                    example: {
                        "subjectIdx": "8"
                    }
        '400':
          description: 'invalid input, object invalid'
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Fail'
    
    delete: 
      tags:
        - Cart
      summary: 장바구니 과목 삭제하기
      operationId: deleteCart
      description: 장바구니 과목 삭제하기
      parameters:
        - in: header
          name: token
          required: true
          schema:
            type: string
          description: JWT 토큰
        - in: path
          name: idx
          required: true
          schema:
            type: string
          description: 과목 idx
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteCart'
        description: Delete Cart data
      responses:
        '200':
          description: 장바구니 과목 삭제하기
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 장바구니 삭제 성공
                  data:
                    type: object
                    example: {
                        "subjectIdx": "8"
                    }
        '400':
          description: 'invalid input, object invalid'
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Fail'


  /subject:
    get:
      tags:
        - Subject
      summary: 수업(과목) 목록 조회
      operationId: getSubject
      description: 수업(과목) 목록 조회
      parameters:
        - in: header
          name: token
          required: true
          schema:
            type: string
          description: JWT 토큰
      responses:
        '200':
          description: 수업(과목) 목록 조회
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 과목 조회 성공
                  data:
                    type: object
                    example: [
                        {
                            "name": "SOPT",
                            "list": [
                                {
                                    "subjectIdx": 6,
                                    "subjectCode": "1001006",
                                    "name": "SOPT",
                                    "professor": "김아무개",
                                    "credit": 3,
                                    "course": "전공필수",
                                    "place": [
                                        "sopt관101"
                                    ],
                                    "day": [
                                        "wen"
                                    ],
                                    "dateTime": [
                                        "12:00-18:00"
                                    ]
                                }
                            ]
                        },
                        {
                            "name": "경영학개론",
                            "list": [
                                {
                                    "subjectIdx": 4,
                                    "subjectCode": "1001004",
                                    "name": "경영학개론",
                                    "professor": "홍아무개",
                                    "credit": 2,
                                    "course": "교양필수",
                                    "place": [
                                        "경영관202",
                                        "경영관B102"
                                    ],
                                    "day": [
                                        "wen",
                                        "fri"
                                    ],
                                    "dateTime": [
                                        "09:00-10:30",
                                        "09:00-10:30"
                                    ]
                                },
                                {
                                    "subjectIdx": 9,
                                    "subjectCode": "1001011",
                                    "name": "경영학개론",
                                    "professor": "이아무개",
                                    "credit": 2,
                                    "course": "교양필수",
                                    "place": [],
                                    "day": [],
                                    "dateTime": []
                                },
                                {
                                    "subjectIdx": 10,
                                    "subjectCode": "1001012",
                                    "name": "경영학개론",
                                    "professor": "김아무개",
                                    "credit": 2,
                                    "course": "전공필수",
                                    "place": [],
                                    "day": [],
                                    "dateTime": []
                                }
                            ]
                        },
                        ...
                    ]
        '400':
          description: 'invalid input, object invalid'
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Fail'

  /subject/recommend:
    get:
      tags:
        - Subject
      summary: 수업(과목)검색 자동완성 - 키워드
      operationId: getRecommendSubject
      description: 수업(과목)검색 자동완성 - 키워드
      parameters:
        - in: header
          name: token
          required: true
          schema:
            type: string
          description: JWT 토큰
        - in: query
          name: name
          required: true
          schema:
            type: string
          description: 검색어(ㅋ, ㅈ, ㄱ, 등)
      responses:
        '200':
          description: 수업(과목)검색 자동완성 - 키워드
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 과목 조회 성공
                  data:
                    type: object
                    example: ...
        '400':
          description: 'invalid input, object invalid'
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Fail'

  /subject/search:
    get:
      tags:
        - Subject
      summary: 수업(과목)검색 자동완성 - 단어
      operationId: getSearchSubject
      description: 수업(과목)검색 자동완성 - 단어
      parameters:
        - in: header
          name: token
          required: true
          schema:
            type: string
          description: JWT 토큰
        - in: query
          name: name
          required: true
          schema:
            type: string
          description: 검색어(전자, 네트워크 등)
      responses:
        '200':
          description: 수업(과목)검색 자동완성 - 단어
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 과목 조회 성공
                  data:
                    type: object
                    example: ...
        '400':
          description: 'invalid input, object invalid'
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Fail'














components:
  schemas:
  
    Token:
      required:
        - accessToken
      properties:
        accessToken:
          type: string
          example: eyJhbGkpXVCJ9.eyJ1c2VySWR4Ijoob29sIjoi6rCA7LKc64yA7Z.WZ6rWQIiwiaWF0IjoxNTkzNjcyMTI5LC
        
    UserIdIdx:
      required:
        - userId
        - userIdx
      properties:
        userId:
          type: string
          example: bappe0925
        userIdx:
          type: int
          example: 12

    Fail:
      required:
        - status
        - success
        - message
      properties:
        status:
          type: int
          example: status code number (400~)
        success:
          type: boolean
          example: false
        message:
          type: string
          example: Fail message
      type: object
    UserSignUp:
      required:
        - id
        - name
        - password
        - email
        - school
      properties:
        id:
          type: string
          example: bappe0925
        name:
          type: string
          example: 김보배
        password:
          type: string
          example: passwordword
        email:
          type: string
          example: bappe0925@email.com
        school:
          type: string
          example: 가천대학교
      type: object
    UserSignIn:
      required:
        - id
        - password
      properties:
        id:
          type: string
          example: bappe0925
        password:
          type: string
          example: passwordword
      type: object
    CreatePersonalTimeTable:
      required:
        - name
        - startTime
        - endTime
        - day
        - content
        - color
        - scheduleIdx
      properties:
        name:
          type: string
          example: 자습
        startTime:
          type: string
          example: "18:00"
        endTime:
          type: string
          example: "19:00"
        day:
          type: string
          example: fri
        content: 
          type: string
          example: 독서실
        color:
          type: string
          example: "2"
        scheduleIdx:
          type: string
          example: "1"
      type: object
    CreateSchoolTimeTable:
      required:
        - subjectIdx
        - color
        - scheduleIdx
      properties:
        subjectIdx:
          type: string
          example: "5"
        color:
          type: string
          example: "9"
        scheduleIdx:
          type: string
          example: "1"
      type: object
    UpdateMainTimeTableName:
      required:
        - name
      properties:
        name:
          type: string
          example: "이번에는 1등하자!"
      type: object
    UpdateSchedulePersonal:
      required:
        - name
        - content
        - startTime
        - endTime
        - day
      properties:
        name:
          type: string
          example: "알바"
        content:
          type: string
          example: "카페알바"
        startTime:
          type: string
          example: "20:00"
        endTime:
          type: string
          example: "22:00"
        day:
          type: string
          example: "sat"
      type: object
    CreateCart:
        required:
          - semester
        properties:
          semester:
            type: string
            example: "2020-1"
        type: object
    DeleteCart:
        required:
          - semester
        properties:
          semester:
            type: string
            example: "2020-1"
        type: object        
    CreateNotice:
        required:
          - category
          - date
          - startTime
          - endTime
          - title
          - content
        properties:
          category:
            type: string
            example: "수업"
          date:
            type: string
            example: "2020-12-17"
          startTime:
            type: string
            example: "-1"
          endTime:
            type: string
            example: "-1"
          title:
            type: string
            example: "폐강"
          content:
            type: string
            example: "수업없어짐"
        type: object
    UpdateSpecificNotice:
        required:
          - category
          - date
          - startTime
          - endTime
          - title
          - content
        properties:
          category:
            type: string
            example: "과제"
          date:
            type: string
            example: "2020-07-10"
          startTime:
            type: string
            example: "-1"
          endTime:
            type: string
            example: "12:00"
          title:
            type: string
            example: "논문 작성"
          content:
            type: string
            example: "전자기학이 뭔지 모름;;ㅎㅎ"
        type: object
    
